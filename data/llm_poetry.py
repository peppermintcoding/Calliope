"""Extract poems from LLMs with API from OpenRouter"""

from openai import OpenAI


FAMOUS_POETS = [
    "William Shakespeare",
    "John Keats",
    "Emily Dickinson",
    "William Wordsworth",
    "Sylvia Plath",
    "William Blake",
    "Robert Frost",
    "T.S. Eliot",
    "Percy Bysshe Shelley",
    "Lord Byron",
    "W. H. Auden",
    "Langston Hughes",
    "Christina Rossetti",
    "Dylan Thomas",
    "Rudyard Kipling",
    "Elizabeth Barrett Browning",
    "John Milton",
    "W. B. Yeats",
    "Robert Browning",
    "Edgar Allan Poe",
    "Alfred, Lord Tennyson",
    "Ted Hughes",
    "Seamus Heaney",
    "Wilfred Owen",
    "Philip Larkin",
    "Geoffrey Chaucer",
    "Andrew Marvell",
    "John Donne",
    "Alexander Pope",
    "Thomas Hardy",
    "Samuel Taylor Coleridge",
    "William Butler Yeats",
    "Dante Gabriel Rossetti",
    "William Langland",
    "Henry Wadsworth Longfellow",
    "Ben Jonson",
    "Edmund Spenser",
    "Thomas Gray",
    "Gerard Manley Hopkins",
    "William Cullen Bryant",
    "John Dryden",
    "George Gordon Byron",
    "Thomas Hood",
    "John Clare",
    "Charlotte BrontÃ«",
    "Anne Bradstreet",
    "Henry Vaughan",
    "Edward Lear",
    "A. E. Housman",
    "Thomas Moore",
    "Robert Burns",
    "William Cowper",
    "Thomas Chatterton",
    "John Keble",
    "Coventry Patmore",
    "Matthew Arnold",
    "James Thomson",
    "Thomas Campion",
    "John Skelton",
    "Richard Crashaw",
    "George Herbert",
    "Thomas Nashe",
    "John Wilmot, 2nd Earl of Rochester",
    "John Lydgate",
    "Edmund Waller",
    "Thomas Wyatt the Younger",
    "John Lyly",
    "Thomas Dekker",
    "George Gascoigne",
    "John Fletcher",
    "Michael Drayton",
    "Thomas Heywood",
    "Thomas Lodge",
    "George Peele",
    "Samuel Daniel",
    "Thomas Middleton",
    "Robert Herrick",
    "Francis Quarles",
    "Giles Fletcher the Elder",
    "Barnabe Barnes",
    "Nicholas Breton"
]


def get_poem(
    api_key: str,
    llm: str,
    user_prompt: str,
    system_prompt: str = "",
    temperature: float = 0.95,
) -> str:
    """Creates poem from openrouter api with given model and prompt"""
    client = OpenAI(
        base_url="https://openrouter.ai/api/v1",
        api_key=api_key,
    )

    completion = client.chat.completions.create(
        model=llm,
        messages=[
            {
                "role": "system",
                "content": system_prompt,
            },
            {
                "role": "user",
                "content": user_prompt,
            },
        ],
        temperature=temperature,
    )
    return completion.choices[0].message.content
